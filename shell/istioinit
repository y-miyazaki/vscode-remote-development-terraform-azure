#!/bin/bash
# ------------------------------------------------------------------------
# Install istio from helm
# check global options list 
# https://istio.io/docs/reference/config/installation-options/#global-options
# ------------------------------------------------------------------------
set -e

# ------------------------------------------------------------------------
# variables
# ------------------------------------------------------------------------
NAME=`basename $0`
ISTIO_VERSION=${ISTIO_VERSION:-1.3.5}
NAMESPACE=istio-system
INSTALL_FLG=${1:-install}
ISTIO_DIR=${3:-/istio-${ISTIO_VERSION}}
MTLS=${4:-1}
TRACING_ENABLED=false
if [ -z $2 ]; then
    EXTERNAL_IP=
else
    EXTERNAL_IP="--set gateways.istio-ingressgateway.loadBalancerIP=$2"
fi

# install tiller
helminit

if [ $INSTALL_FLG = "install" ]; then
    # install istio
    helm repo add istio.io https://storage.googleapis.com/istio-release/releases/$ISTIO_VERSION/charts/
    helm repo update
    echo "# ------------------------------------------------------------------------"
    echo "# install istio"
    echo "# ------------------------------------------------------------------------"
    WC=`kubectl get crds | grep 'istio.io' | wc -l`
    if [ $WC -eq 0 ]; then
        # helm install ${ISTIO_DIR}/install/kubernetes/helm/istio-init --name istio-init --namespace $NAMESPACE
        helm install istio.io/istio-init --name istio-init --namespace $NAMESPACE
        echo "----------check job condition start...----------"
        kubectl -n $NAMESPACE wait --for=condition=complete job --all
        echo "----------check job condition finished.----------"
    else
        echo "istio init already installed."
    fi
    WC=`kubectl get pods --all-namespaces | grep istio-pilot | wc -l`
    # MTLS on
    if [ $WC -eq 0 ]; then
        if [ $MTLS -eq 1 ]; then
            # MTLS health check problem
            # --set values.sidecarInjectorWebhook.rewriteAppHTTPProbe=true
            # https://istio.io/docs/ops/configuration/mesh/app-health-check/
            # --set values.sidecarInjectorWebhook.rewriteAppHTTPProbe=true \

            # Too many log problem
            # --set global.logging.level=warn \
            # --set mixer.adapters.stdio.enabled=false \
            helm install istio.io/istio --name istio --namespace $NAMESPACE --version $ISTIO_VERSION $EXTERNAL_IP \
                --set global.logging.level=warn \
                --set mixer.adapters.stdio.enabled=false \
                --set values.sidecarInjectorWebhook.rewriteAppHTTPProbe=true \
                --set global.controlPlaneSecurityEnabled=true \
                --set global.mtls.enabled=true \
                --set grafana.enabled=true --set grafana.security.enabled=false \
                --set tracing.enabled=$TRACING_ENABLED \
                --set kiali.enabled=true \
                --set global.defaultNodeSelector."beta\.kubernetes\.io/os"=linux
        # MTLS off
        else
            # Too many log problem
            # --set global.logging.level=warn \
            # --set mixer.adapters.stdio.enabled=false \
            helm install istio.io/istio --name istio --namespace $NAMESPACE --version $ISTIO_VERSION $EXTERNAL_IP \
                --set global.logging.level=warn \
                --set mixer.adapters.stdio.enabled=false \
                --set values.sidecarInjectorWebhook.rewriteAppHTTPProbe=false \
                --set global.controlPlaneSecurityEnabled=true \
                --set global.mtls.enabled=false \
                --set grafana.enabled=true --set grafana.security.enabled=false \
                --set tracing.enabled=$TRACING_ENABLED \
                --set kiali.enabled=true \
                --set global.defaultNodeSelector."beta\.kubernetes\.io/os"=linux
        fi
    fi
    # helm upgrade \
    #   istio  \
    #   /istio-${ISTIO_VERSION}/install/kubernetes/helm/istio \
    #   --set global.logging.level=warn \
    #   --set mixer.adapters.stdio.enabled=false \
    #   --namespace istio-system \
    #   --values /istio-${ISTIO_VERSION}/install/kubernetes/helm/istio/values-istio-demo-auth.yaml
    echo "# ------------------------------------------------------------------------"
    echo "# crds list"
    echo "# ------------------------------------------------------------------------"
    kubectl get crds | grep 'istio.io'

    echo "# ------------------------------------------------------------------------"
    echo "# istio pod list"
    echo "# ------------------------------------------------------------------------"
    kubectl get pods --all-namespaces | grep $NAMESPACE

    echo "# ------------------------------------------------------------------------"
    echo "# enable istio injection"
    echo "# ------------------------------------------------------------------------"
    kubectl label namespace default istio-injection=enabled --overwrite
    kubectl get namespace -L istio-injection
elif [ $INSTALL_FLG = "uninstall" ]; then
    set +e
    helm delete --purge istio
    helm delete --purge istio-init
    helm delete --purge istio-cni
    for i in ${ISTIO_DIR}/install/kubernetes/helm/istio-init/files/*crd*yaml; do kubectl delete -f $i; done
    kubectl delete namespace $NAMESPACE
    kubectl label namespace default istio-injection= --overwrite
    set -e
fi
